// Generated by CoffeeScript 1.7.1
var componentStatic, debug, fs, glob, mergeJsons, path,
  __hasProp = {}.hasOwnProperty;

fs = require('fs');

glob = require('glob');

path = require('path');

debug = require('debug')('component-static');

mergeJsons = function(files, callback) {
  var cnt, file, result, _i, _len, _results;
  result = {};
  cnt = files.length;
  _results = [];
  for (_i = 0, _len = files.length; _i < _len; _i++) {
    file = files[_i];
    _results.push(fs.readFile(file, function(err, data) {
      var dir, json, prefix, staticDir, _ref;
      if (!err) {
        try {
          json = JSON.parse(data);
          if (json["static"]) {
            _ref = json["static"];
            for (prefix in _ref) {
              if (!__hasProp.call(_ref, prefix)) continue;
              staticDir = _ref[prefix];
              dir = path.dirname(file);
              result[prefix] = path.normalize(path.join(dir, staticDir));
              debug('prefix', prefix, ' path', result[prefix]);
            }
          }
        } catch (_error) {

        }
      }
      cnt--;
      if (cnt === 0) {
        return callback(result);
      }
    }));
  }
  return _results;
};

componentStatic = function(callback) {
  return glob('**/component.json', function(err, files) {
    if (err) {
      return callback(err);
    }
    if (files.length === 0) {
      return callback(null, {});
    }
    debug('files', files, err);
    return mergeJsons(files, function(staticMapping) {
      return callback(null, staticMapping);
    });
  });
};

module.exports = componentStatic;
